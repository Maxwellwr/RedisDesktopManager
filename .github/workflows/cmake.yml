name: CMake

on: 
  workflow_dispatch
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: 'Windows Latest x64'
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: apply patch
      run: git apply ../hiredis-win.patch
      working-directory: 3rdparty/qredisclient/3rdparty/hiredis
      
    - name: Setup VS Dev Environment
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-vsdevenv@8c6bbf80998779f2bba87b1452832e561b65fd57
      uses: seanmiddleditch/gha-setup-vsdevenv@v3
      
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Path
      run: |
        echo "c:\Qt\Tools\CMake_64\bin" >> $GITHUB_PATH
        echo "C:\Qt\5.15.1\msvc2019_64\bin" >> $GITHUB_PATH
      
    - name: install zLib
      run: |
        cd 3rdparty
        nuget install zlib-msvc14-x64 -Version 1.2.11.7795
              
    - name: Configure with cmake LZ4
      run: cmake -DLZ4_BUNDLED_MODE=ON .
      working-directory: 3rdparty/lz4/build/cmake
        
    - name: Build LZ4
      run: msbuild LZ4.sln /t:Build /p:Configuration=Release
      working-directory: 3rdparty/lz4/build/cmake

    - name: install python requirements
      run: pip3 install -r src/py/requirements.txt
           
    - name: Build
      run: |
        qmake src/rdm.pro
        nmake
